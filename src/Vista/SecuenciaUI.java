/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

/**
 *
 * @author fabian_esteban.lopez
 */
public class SecuenciaUI extends javax.swing.JFrame {

    /**
     * Creates new form SecuenciaUI
     */
    public SecuenciaUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowResponse = new javax.swing.JTextArea();
        TextNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextExponente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        EvenNumberCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        FactorialNumberCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        FibonacciCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        ExponenteCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Secuencias");

        ShowResponse.setEditable(false);
        ShowResponse.setColumns(20);
        ShowResponse.setRows(5);
        jScrollPane1.setViewportView(ShowResponse);

        jLabel2.setText("Digite un número");

        jLabel3.setText("Digite un exponte");

        jMenu1.setText("File");

        EvenNumberCheckBoxMenuItem.setSelected(true);
        EvenNumberCheckBoxMenuItem.setText("Número Par");
        EvenNumberCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EvenNumberCheckBoxMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(EvenNumberCheckBoxMenuItem);

        FactorialNumberCheckBoxMenuItem.setSelected(true);
        FactorialNumberCheckBoxMenuItem.setText("Factorial de un número");
        FactorialNumberCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorialNumberCheckBoxMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(FactorialNumberCheckBoxMenuItem);

        FibonacciCheckBoxMenuItem.setSelected(true);
        FibonacciCheckBoxMenuItem.setText("Fibonacci");
        FibonacciCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FibonacciCheckBoxMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(FibonacciCheckBoxMenuItem);

        ExponenteCheckBoxMenuItem.setSelected(true);
        ExponenteCheckBoxMenuItem.setText("Exponente");
        ExponenteCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExponenteCheckBoxMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ExponenteCheckBoxMenuItem);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Numero Primo");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextExponente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(221, 221, 221))
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextExponente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TextNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EvenNumberCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EvenNumberCheckBoxMenuItemActionPerformed
        String response = "";
        int number = Integer.parseInt(TextNumber.getText());

        if (number % 2 == 0) {
            response = "Es un número par.";
        } else {
            response = "Es un número impar.";
        }
        ShowResponse.setText(response);
    }//GEN-LAST:event_EvenNumberCheckBoxMenuItemActionPerformed

    private void FactorialNumberCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactorialNumberCheckBoxMenuItemActionPerformed
        String response = "";
        int number = Integer.parseInt(TextNumber.getText());

        if (number == 0 || number == 1) {
            response = "El factorial es: 1";
        } else {
            int factorialaux = 1;
            for (int i = 2; i <= number; i++) {
                factorialaux *= i;
            }
            response = "El factorial es: " + String.valueOf(factorialaux);
        }
        ShowResponse.setText(response);
    }//GEN-LAST:event_FactorialNumberCheckBoxMenuItemActionPerformed

    private void FibonacciCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FibonacciCheckBoxMenuItemActionPerformed
        String response = "";
        int number = Integer.parseInt(TextNumber.getText());

        int aux = 0;
        int current = 1;
        int lastNumber = 0;

        while (aux + current <= number) {
            int next = aux + current;
            aux = current;
            current = next;
            lastNumber = aux;
        }
        response = "El numero fibonacci es: " + lastNumber;
        ShowResponse.setText(response);
    }//GEN-LAST:event_FibonacciCheckBoxMenuItemActionPerformed

    private void ExponenteCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExponenteCheckBoxMenuItemActionPerformed
        String response = "";
        int number = Integer.parseInt(TextNumber.getText());
        int numberExponente = Integer.parseInt(TextExponente.getText());

        response = "el resultado es" + exponente(number, numberExponente);
        ShowResponse.setText(response);
    }//GEN-LAST:event_ExponenteCheckBoxMenuItemActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        String response = "";
        int number = Integer.parseInt(TextNumber.getText());

        if (number <= 1) {
            response = "EL numero no es primo.";
        }
        for (int i = 0; i < number; i++) {
            if (number % i == 0) {
                response = "EL numero no es primo.";
            }
        }

        ShowResponse.setText(response);
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    public int exponente(int base, int exponente) {
        int result = 0;
        for (int i = 0; i < exponente; i++) {
            result += base;
        }
        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecuenciaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecuenciaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecuenciaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecuenciaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecuenciaUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem EvenNumberCheckBoxMenuItem;
    private javax.swing.JCheckBoxMenuItem ExponenteCheckBoxMenuItem;
    private javax.swing.JCheckBoxMenuItem FactorialNumberCheckBoxMenuItem;
    private javax.swing.JCheckBoxMenuItem FibonacciCheckBoxMenuItem;
    private javax.swing.JTextArea ShowResponse;
    private javax.swing.JTextField TextExponente;
    private javax.swing.JTextField TextNumber;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
